[manifest]
version = "1.0.0"
dump_lua = true
priority = 422

# code card fallback
[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/code.lua"]'''
pattern = '''default = "c_cry_crash",'''
position = "at"
payload = '''default = "c_cry_oboe",'''
match_indent = true

# profile names
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = 'Cryptid.profile_prefix = "M"'
position = "at"
payload = 'Cryptid.profile_prefix = "J"'
match_indent = true

# tutorial stuff
[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "lib/gameset.lua"]'''
pattern = '''if not G.SETTINGS.paused and not G.PROFILES[G.SETTINGS.profile].cry_intro_complete then'''
position = "before"
payload = '''G.selectedGameset = "madness"
G.PROFILES[G.SETTINGS.profile].cry_intro_complete = true
G.PROFILES[G.SETTINGS.profile].cry_gameset = G.selectedGameset
G.SETTINGS.paused = false
if G.gamesetUI then
    G.gamesetUI:remove()
end
if G.gateway then
    G.gateway:remove()
end
if G.yawetag then
    G.yawetag:remove()
end
G.E_MANAGER:clear_queue("tutorial")
if G.OVERLAY_TUTORIAL then
    G.OVERLAY_TUTORIAL.Jimbo:remove()
    if G.OVERLAY_TUTORIAL.content then
        G.OVERLAY_TUTORIAL.content:remove()
    end
end
'''
match_indent = true

# pointer patches
[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/pointer.lua"]'''
pattern = '''Cryptid.pointerblistifytype("rarity", "cry_exotic", nil)'''
position = "at"
payload = ''' '''
match_indent = true

# gateway saint compat

[[patches]]
[patches.pattern]
target = '''=[SMODS jen "Jen.lua"]'''
pattern = '''local maxfloat = 1.7976931348623157e308'''
position = "after"
payload = '''
SMODS.Consumable:take_ownership("c_cry_gateway", {
    can_use = function(self, card)
		if (#SMODS.find_card("j_jen_saint") + #SMODS.find_card("j_jen_saint_attuned")) > 0 then
			return #G.jokers.cards < G.jokers.config.card_limit
		else
			--Don't allow use if everything is eternal and there is no room
			return #Cryptid.advanced_find_joker(nil, nil, nil, { "eternal" }, true, "j") < G.jokers.config.card_limit
		end
	end,
	use = function(self, card, area, copier)
		if (#SMODS.find_card("j_jen_saint") + #SMODS.find_card("j_jen_saint_attuned")) <= 0 then
			local deletable_jokers = {}
			for k, v in pairs(G.jokers.cards) do
				if not v.ability.eternal then
					deletable_jokers[#deletable_jokers + 1] = v
				end
			end
			local _first_dissolve = nil
			G.E_MANAGER:add_event(Event({
				trigger = "before",
				delay = 0.75,
				func = function()
					for k, v in pairs(deletable_jokers) do
						if v.config.center.rarity == "cry_exotic" then
							check_for_unlock({ type = "what_have_you_done" })
						end
						v:start_dissolve(nil, _first_dissolve)
						_first_dissolve = true
					end
					return true
				end,
			}))
		end
		G.E_MANAGER:add_event(Event({
			trigger = "after",
			delay = 0.4,
			func = function()
				play_sound("timpani")
				local card = create_card("Joker", G.jokers, nil, "cry_exotic", nil, nil, nil, "cry_gateway")
				card:add_to_deck()
				G.jokers:emplace(card)
				card:juice_up(0.3, 0.5)
				return true
			end,
		}))
		delay(0.6)
	end,
})
'''
match_indent = true


# no ghost
[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/spooky.lua"]'''
pattern = '''		--create a ghost
		local card = create_card("Joker", G.jokers, nil, nil, nil, nil, "j_cry_ghost")
		card:add_to_deck()
		G.jokers:emplace(card)'''
position = "at"
payload = '''		--DON'T create a ghost
		if G.GAME.dollars ~= 0 then
            ease_dollars((-1e6), true)
        end'''
match_indent = true

# all of the cryptid planet color things

# timantti
[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["High Card"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["High Card"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["High Card"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["High Card"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["High Card"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Pair"].level) == to_big(1) and G.C.UI.TEXT_DARK or G.C.HAND_LEVELS[to_big(
math.min(7, G.GAME.hands["Pair"].level)
):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Pair"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Pair"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Pair"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Two Pair"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["Two Pair"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Two Pair"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Two Pair"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Two Pair"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Three of a Kind"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["Three of a Kind"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Three of a Kind"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Three of a Kind"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Three of a Kind"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Straight"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["Straight"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Straight"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Straight"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Straight"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Flush"].level) == to_big(1) and G.C.UI.TEXT_DARK or G.C.HAND_LEVELS[to_big(
						math.min(7, G.GAME.hands["Flush"].level)
					):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Flush"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Flush"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Flush"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Full House"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["Full House"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Full House"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Full House"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Full House"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true 

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Four of a Kind"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["Four of a Kind"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Four of a Kind"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Four of a Kind"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Four of a Kind"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true 

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Straight Flush"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["Straight Flush"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Straight Flush"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Straight Flush"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Straight Flush"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true 

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Five of a Kind"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["Five of a Kind"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Five of a Kind"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Five of a Kind"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Five of a Kind"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Flush House"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["Flush House"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Flush House"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Flush House"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Flush House"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["Flush Five"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["Flush Five"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["Flush Five"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["Flush Five"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["Flush Five"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["cry_Bulwark"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["cry_Bulwark"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["cry_Bulwark"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["cry_Bulwark"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["cry_Bulwark"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["cry_Clusterfuck"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["cry_Clusterfuck"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["cry_Clusterfuck"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["cry_Clusterfuck"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["cry_Clusterfuck"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["cry_UltPair"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["cry_UltPair"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["cry_UltPair"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["cry_UltPair"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["cry_UltPair"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

[[patches]]
[patches.pattern]
target = '''=[SMODS Cryptid "items/planet.lua"]'''
pattern = '''to_big(G.GAME.hands["cry_WholeDeck"].level) == to_big(1) and G.C.UI.TEXT_DARK
or G.C.HAND_LEVELS[to_big(math.min(7, G.GAME.hands["cry_WholeDeck"].level)):to_number()]'''
position = "at"
payload = '''to_big(G.GAME.hands["cry_WholeDeck"].level) <= to_big(7200) and G.C.HAND_LEVELS["!" .. number_format(to_big(G.GAME.hands["cry_WholeDeck"].level))] 
or G.C.HAND_LEVELS[number_format(to_big(G.GAME.hands["cry_WholeDeck"].level))] or G.C.UI.TEXT_DARK --jen was here'''
match_indent = true

 
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''contents.dollars_chips = {n=G.UIT.R, config={align = "cm",r=0.1, padding = 0,colour = G.C.DYN_UI.BOSS_MAIN, emboss = 0.05, id = 'row_dollars_chips'}, nodes={'''
position = "before"
payload = '''contents.hand =
        {n=G.UIT.R, config={align = "cm", id = 'hand_text_area', colour = darken(G.C.BLACK, 0.1), r = 0.1, emboss = 0.05, padding = 0.03}, nodes={
            {n=G.UIT.C, config={align = "cm"}, nodes={
              {n=G.UIT.R, config={align = "cm", minh = 1.1}, nodes={
                {n=G.UIT.O, config={id = 'hand_name', func = 'hand_text_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "handname_text"}}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, float = true, scale = scale*1.4})}},
                {n=G.UIT.O, config={id = 'cry_asc', func = 'cry_asc_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "cry_asc_num_text"}}, colours = {G.C.GOLD}, shadow = true, float = true, scale = scale*1})}},
                {n=G.UIT.O, config={id = 'hand_chip_total', func = 'hand_chip_total_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "chip_total_text"}}, colours = {G.C.UI.TEXT_LIGHT}, shadow = true, float = true, scale = scale*1.4})}},
                {n=G.UIT.T, config={ref_table = G.GAME.current_round.current_hand, ref_value='hand_level', scale = scale, colour = G.C.UI.TEXT_LIGHT, id = 'hand_level', shadow = true}}
              }},
              {n=G.UIT.R, config={align = "cm", minh = .5, padding = 0.1}, nodes={
                {n=G.UIT.C, config={align = "cr", minw = 2, minh = .5, r = 0.1,colour = G.C.UI_CHIPS, id = 'hand_chip_area', emboss = 0.05}, nodes={
                    {n=G.UIT.O, config={func = 'flame_handler',no_role = true, id = 'flame_chips', object = Moveable(0,0,0,0), w = 0, h = 0}},
                    {n=G.UIT.O, config={id = 'hand_chips', func = 'hand_chip_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "chip_text"}}, colours = {G.C.UI.TEXT_LIGHT}, font = G.LANGUAGES['en-us'].font, shadow = true, float = true, scale = scale*1.15})}},
                    {n=G.UIT.B, config={w=0.1,h=0.1}},
                }},
                {n=G.UIT.C, config={align = "cm"}, nodes={
                  {n=G.UIT.T, config={id = "chipmult_op", text = "X", lang = G.LANGUAGES["en-us"], scale = scale, colour = G.C.UI_MULT, shadow = true}},
                }},
                {n=G.UIT.C, config={align = "cl", minw = 2, minh= .5, r = 0.1,colour = G.C.UI_MULT, id = 'hand_mult_area', emboss = 0.05}, nodes={
                  {n=G.UIT.O, config={func = 'flame_handler',no_role = true, id = 'flame_mult', object = Moveable(0,0,0,0), w = 0, h = 0}},
                  {n=G.UIT.B, config={w=0.1,h=0.1}},
                  {n=G.UIT.O, config={id = 'hand_mult', func = 'hand_mult_UI_set',object = DynaText({string = {{ref_table = G.GAME.current_round.current_hand, ref_value = "mult_text"}}, colours = {G.C.UI.TEXT_LIGHT}, font = G.LANGUAGES['en-us'].font, shadow = true, float = true, scale = scale*1.15})}},
                }}
              }}
            }}
          }}'''
match_indent = false